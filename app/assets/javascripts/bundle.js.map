{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,SAAS;AACT,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;;AAEA,iEAAe,OAAO;;;;;;;;;;;;;;;AC9DW;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,8DAAoB;AAChC;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,YAAY,4DAAkB;AAC9B;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,YAAY;;;;;;;;;;;;;;;ACxDM;;AAEjC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,YAAY,8DAAoB;AAChC;AACA;AACA,aAAa;AACb,UAAU;AACV;AACA;AACA,YAAY,4DAAkB;AAC9B;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,aAAa;;;;;;;;;;;;;;ACvD5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;AC9BQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY,4DAAkB;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,kBAAkB;AAClD;AACA;;AAEA,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,iFAAiF,KAAK,EAAE,aAAa,IAAI,mBAAmB;AAC5H,uDAAuD,aAAa;AACpE,oCAAoC;AACpC,8CAA8C,KAAK,EAAE,gBAAgB,MAAM,uBAAuB,QAAQ;AAC1G,6BAA6B,4DAAkB;AAC/C,iDAAiD,SAAS;AAC1D;AACA;AACA;AACA;AACA,2CAA2C,YAAY;AACvD;AACA;AACA;;AAEA,iEAAe,IAAI;;;;;;;;;;;;;;ACnHnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe,QAAQ,EAAC;;;;;;;;;;;;;;;;AC1FS;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,8EAA8E,iBAAiB,kBAAkB;AACjH,UAAU,0CAA0C,QAAQ,IAAI,UAAU;AAC1E;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,MAAM;AAChD;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;;;AAIA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,mFAAmF,aAAa,IAAI,mBAAmB;AACvH,mDAAmD,aAAa;AAChE,gCAAgC;AAChC,gDAAgD,gBAAgB,MAAM,uBAAuB,QAAQ;AACrG,yBAAyB,4DAAkB;AAC3C,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA,uCAAuC,YAAY;;AAEnD;;;AAGA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,YAAY,6DAAmB;AAC/B;AACA;;AAEA;;AAEA,iEAAe;;;;;;;;;;;;;;;;AC7HkB;AACU;AAC3C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAQ,6DAAmB;AAC3B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;AACA,wBAAwB,cAAc;AACtC,sCAAsC,QAAQ;;AAE9C;AACA,gBAAgB,sDAAY;AAC5B;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA,iEAAe,WAAW;;;;;;UC1D1B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACN2C;AACF;AACR;AACE;AACQ;AACE;AACnB;;AAE1B;;AAEA;AACA,0BAA0B,sDAAY;AACtC,KAAK;AACL;AACA,2BAA2B,qDAAW;AACtC,KAAK;AACL,uBAAuB,+CAAS;AAChC,uBAAuB,kDAAQ;AAC/B,uBAAuB,sDAAY;AACnC;AACA,uBAAuB,uDAAa;AACpC;AACA,uBAAuB,6CAAI;AAC3B,CAAC,C","sources":["./frontend/api_util.js","./frontend/follow_toggle.js","./frontend/follow_toggle2.js","./frontend/header.js","./frontend/more.js","./frontend/side_pull.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","webpack/runtime/define property getters","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","./frontend/twitter.js"],"sourcesContent":["\nconst APIUtil = {\n    followUser: id => {\n       return $.ajax({\n            url: `/users/${id}/follow`,\n            method: 'POST',\n            dataType: 'json',\n            \n        })\n    },\n\n    unfollowUser: id => {\n       return $.ajax({\n            url: `/users/${id}/follow`,\n            method: 'DELETE',\n            dataType: 'json',\n            \n        })\n    },\n\n    searchUsers: query=>{\n       return $.ajax({\n            url:'/users/search',\n            method:'GET',\n            dataType:'json',\n            data: { query }\n        })\n    },\n\n    createTweet: data=>{\n        return $.ajax({\n            url: '/tweets',\n            method: 'POST',\n            dataType:'json',\n            data\n        })\n    },\n    fetchTweet: data => (\n        $.ajax({\n            url: '/feed',\n            method: 'GET',\n            dataType: 'json',\n            data\n        })\n    ),\n\n \n    formatDate: date => {\n        const dateTime = new Date(date);\n        const formattedDateTime = dateTime.toLocaleString(\"en-US\", {\n            year: \"numeric\",\n            month: \"2-digit\",\n            day: \"2-digit\",\n            hour: \"2-digit\",\n            minute: \"2-digit\",\n            hour12: false, \n        }).replace(/(\\d+)\\/(\\d+)\\/(\\d+), (\\d+):(\\d+)/, \"$3-$1-$2 $4:$5\");\n        return formattedDateTime;\n    }\n\n};\n\nexport default APIUtil;","import APIUtil from \"./api_util\";\n\nclass FollowToggle {\n    constructor(el, options) {\n        this.$el = $(el);\n        this.userId = this.$el.data('user-id') || options.userId;\n        this.followState = (this.$el.data('initial-follow-state') ||\n            options.followState);\n        this.render();\n\n        this.$el.on('click', this.handleClick.bind(this));\n    }\n\n    handleClick(event) {\n        const followToggle = this;\n\n        event.preventDefault();\n\n        if (this.followState === 'followed') {\n            this.followState = 'unfollowing';\n            this.render();\n            APIUtil.unfollowUser(this.userId).then(() => {\n                followToggle.followState = 'unfollowed';\n                followToggle.render();\n            });\n        } else if (this.followState === 'unfollowed') {\n            this.followState = 'following';\n            this.render();\n            APIUtil.followUser(this.userId).then(() => {\n                followToggle.followState = 'followed';\n                followToggle.render();\n            });\n        }\n    }\n\n    render() {\n        switch (this.followState) {\n            case 'followed':\n                this.$el.prop('disabled', false);\n                this.$el.html('Unfollow!');\n                break;\n            case 'unfollowed':\n                this.$el.prop('disabled', false);\n                this.$el.html('Follow!');\n                break;\n            case 'following':\n                this.$el.prop('disabled', true);\n                this.$el.html('Following...');\n                break;\n            case 'unfollowing':\n                this.$el.prop('disabled', true);\n                this.$el.html('Unfollowing...');\n                break;\n        }\n    }\n}\nexport default FollowToggle;","import APIUtil from \"./api_util\";\n\nclass FollowToggle2 {\n    constructor(el, options) {\n        this.$el = $(el);\n        this.userId = this.$el.data('user-id') || options.userId;\n        this.followState = this.$el.data('follow-state') ? 'followed' : 'unfollowed'\n        this.render();\n\n        this.$el.on('click', this.handleClick.bind(this));\n    }\n\n    handleClick(event) {\n        const FollowToggle2 = this;\n\n        event.preventDefault();\n\n        if (this.followState === 'followed') {\n            this.followState = 'unfollowing';\n            this.render();\n            APIUtil.unfollowUser(this.userId).then(() => {\n                FollowToggle2.followState = 'unfollowed';\n                FollowToggle2.render();\n            });\n        } else if (this.followState === 'unfollowed') {\n            this.followState = 'following';\n            this.render();\n            APIUtil.followUser(this.userId).then(() => {\n                FollowToggle2.followState = 'followed';\n                FollowToggle2.render();\n            });\n        }\n    }\n\n    render() {\n        switch (this.followState) {\n            case 'followed':\n                this.$el.prop('disabled', false);\n                this.$el.html('Unfollow!');\n                break;\n            case 'unfollowed':\n                this.$el.prop('disabled', false);\n                this.$el.html('Follow!');\n                break;\n            case 'following':\n                this.$el.prop('disabled', true);\n                this.$el.html('Following...');\n                break;\n            case 'unfollowing':\n                this.$el.prop('disabled', true);\n                this.$el.html('Unfollowing...');\n                break;\n        }\n    }\n}\nexport default FollowToggle2;","class Headerfix {\n\nconstructor(ele,body){\n    this.$body = body;\n    this.$ele = ele;\n    this.$ul = this.$ele.find('ul');\n    this.$image = this.$ele.find(\"image\");\n    this.$ele.on('click', this.$image , this.hamburger.bind(this));\n    this.$body.on('click', this.close.bind(this));\n}\nhamburger(event){\n    event.stopPropagation();\n\n    if(this.$ul.hasClass(\"hidden\")){\n        this.$ul.removeClass(\"hidden\")\n    }\n    else{\n        this.$ul.addClass(\"hidden\")\n    }\n\n    \n}\nclose(event){\n\n    if (!this.$ul.hasClass(\"hidden\")) {\n        this.$ul.addClass(\"hidden\")\n    }\n}\n}\n\nexport default Headerfix;","import APIUtil from './api_util'\nclass More {\n    constructor(doc) {\n        this.$doc = $(doc);\n        this.$moreButton = this.$doc.find('.more');\n        this.$ul = this.$doc.find('.my_ul')\n        this.lastCreatedAt = null;\n        this.fechMore();\n        this.$moreButton.on('click', this.fechMore.bind(this));\n        this.moreTextCheck()\n\n\n        this.startY = 0;\n        this.threshold = 70; \n\n        this.$doc.on('touchstart', this.handleTouchStart.bind(this));\n        this.$doc.on('touchmove', this.handleTouchMove.bind(this));\n        this.debounceTimeout = null;\n    }\n    moreTextCheck(){\n        if (this.$doc.width() > 1000 ){  this.$moreButton.html('More!')}\n    }\n    handleTouchStart(event) {\n\n        this.startY = event.originalEvent.touches[0].clientY;\n    }\n\n    handleTouchMove(event) {\n        if (!event.originalEvent.touches || event.originalEvent.touches.length === 0) {\n            return;\n        }\n\n        if (event.originalEvent.touches.length > 1) {\n           \n            return;\n        }\n\n\n        const currentY = event.originalEvent.touches[0].clientY;\n\n        const deltaY = currentY - this.startY;\n\n        if (deltaY < -80){\n            \n            if (this.debounceTimeout) {\n                clearTimeout(this.debounceTimeout);\n            }\n\n            \n            this.debounceTimeout = setTimeout(() => {\n                \n                this.fechMore();\n                \n                this.debounceTimeout = null;\n            }, 1000);\n        }\n        }\n    \n        fechMore(){\n            const currentUrl = window.location.href;\n            const parts = currentUrl.split(\"/\");\n            const lastPart = parts.pop();\n            let dt\n            if (currentUrl.includes(\"feed\")) {\n                dt = \"feeed\"\n            } else {\n               \n                dt = lastPart\n            }\n            const data = {};\n            data.temp = dt;\n            if (More.lastCreatedAt) data.max_created_at = More.lastCreatedAt;\n\n            APIUtil.fetchTweet(data).then(tweet => {\n\n                if (tweet.length > 0) {\n                    More.lastCreatedAt = tweet[tweet.length - 1].created_at;\n                    console.log(More.lastCreatedAt)\n                }\n                if (tweet.length < 10) {\n                    this.$moreButton.css('display', 'none');\n                }\n\n                for (let i = 0; i < tweet.length; i++) {\n                    this.$ul.append(this.style(tweet[i]))\n                }\n\n            })\n        };\n\n\n        style(data){\n            const currentUrl = window.location.href;\n            let href\n            if(currentUrl.includes(\"feed\")){\n                 href = \"users/\"\n            }else{\n                href = \"\"\n            }\n            const li = $('<li class=\"tweet\">');\n            const profile = $(`<div class=\"top-part\" ><a class=\"profile\" href=\"${href}${data.user.id}\">${data.user.username}</a></div>`);\n            const content = $(`<span class=\"content\">${data.content}</span>`);\n            const mentions = `<ul>${data.mentions.map((mention) =>\n                (`<a class=\"mentions\" href=\"${href}${mention.user.id}\"> @${mention.user.username} </a>`))}</ul>`;\n            const new_date = APIUtil.formatDate(data.created_at);\n            const date = $(`<span class=\"date\">${new_date}</span>`);\n            profile.append(mentions);\n            li.append(profile);\n            li.append(content);\n            li.append(date);\n            li.css('opacity', 0).animate({ opacity: 1 }, 500);\n            return li\n        }\n    }\n\nexport default More;","class SidePull {\n    constructor(left, head, botton, form, body,doc) {\n        // side\n        this.$left = $(left);\n        this.$head = $(head);\n        this.$ul = this.$head.find('ul');\n        this.$left.on('click', this.pull.bind(this));\n        // bottom\n        this.$body = $(body);\n        this.$overlay = $(this.$body.find('.overlay'));\n        this.$doc = $(doc);\n        this.$botton = $(botton);\n        this.$form = $(form);\n        this.$botton.on('click', this.form.bind(this));\n        this.$overlay.on('click', this.form.bind(this));\n        \n        \n        // Mobile swipe gesture\n        this.startX = 0;\n        this.startY = 0;\n        this.threshold = 70; \n        \n        this.$doc.on('touchstart', this.handleTouchStart.bind(this));\n        this.$doc.on('touchmove', this.handleTouchMove.bind(this));\n    }\n\n    handleTouchStart(event) {\n        this.startX = event.originalEvent.touches[0].clientX;\n        this.startY = event.originalEvent.touches[0].clientY;\n    }\n\n    handleTouchMove(event) {\n        if (!event.originalEvent.touches || event.originalEvent.touches.length === 0) {\n            return;\n        }\n\n        if (event.originalEvent.touches.length > 1) {\n            \n            return;\n        }\n\n        const currentX = event.originalEvent.touches[0].clientX;\n        const currentY = event.originalEvent.touches[0].clientY;\n        const deltaX = currentX - this.startX;\n        const deltaY = currentY - this.startY;\n        if(Math.abs(deltaY) < 30){\n        if (deltaX > this.threshold) {\n            \n            this.$ul.removeClass('hidden');\n        }\n        if (deltaX < 0 && Math.abs(deltaX) > this.threshold){\n            this.$ul.addClass('hidden');\n        }\n    }\n        \n        if (deltaY > 80 && this.$form.hasClass('on')) {\n            this._removeForm();\n        }\n    }\n\n    pull(event) {\n        event.stopPropagation();\n        if (this.$ul.hasClass('hidden')) {\n            this.$ul.removeClass('hidden');\n        }\n    }\n\n    form(event) {\n        if (!this.$form.hasClass('on')) {\n            this.$botton.html('<h1>Close</h1>');\n            this.$botton.css('background1-color', 'rgb(1, 72, 172)');\n            this.$overlay.css('bottom', -this.$body.height());\n            this.$form.addClass('on');\n\n            this.$overlay.addClass('on');\n            this.$body.css('overflow', 'hidden');\n        } else {\n            this._removeForm();\n        }\n    }\n    _removeForm(){\n    this.$overlay.css('bottom', '0');\n    this.$botton.css('background-color', 'rgb(1, 72, 172)');\n    this.$botton.html('<h1>Post Tweet</h1>');\n    this.$form.removeClass('on');\n    this.$overlay.removeClass('on');\n    this.$body.css('overflow', 'auto');\n    }\n}\n\nexport default SidePull;\n","import APIUtil from \"./api_util\";\n\nclass TweetCompose {\n    constructor(el, doc ) {\n        this.$el = $(el);\n        this.$doc = $(doc);\n        this.$ul = this.$doc.find('.my_ul');\n        this.$mentions = this.$el.find(\".mentions\");\n        this.$text = this.$el.find('.tweet-text-area');\n        this.$select = this.$el.find('select');\n                this.$el.on('submit', this.compose.bind(this));\n        this.$el.find('.mention-select').on('click' , this.addMention.bind(this));\n    }\n    addMention(e) {\n        // this.$el.find('.tweet-submit').css('margin' ,'100px auto')\n            e.preventDefault();\n        this.$el.find('.tweet-text-area').css('margin-bottom', '-50px ')  \n        const userOptions = window.users.map(user => ({\n            id: user.id,\n            text: user.username\n        }));\n\n        const html = `\n    <div>\n      <label class=\"mention-label\" for=\"mention-select\">Add mentions</label>\n      <select class=\"mention-select\" multiple=\"multiple\" style=\"width: 400px; font-size: 50px; margin: 50px auto;\">\n        ${userOptions.map(user => `<option value=\"${user.id}\">${user.text}</option>`)}\n      </select>\n    </div>`;\n\n        this.$mentions.append(html);\n\n        \n        const $select = $('.mention-select');\n        $select.select2({\n            tags: true,\n            tokenSeparators: [',', ' '],\n            closeOnSelect: false,\n            templateSelection: formatSelection,\n            templateResult: formatResult\n        });\n\n        function formatSelection(selection) {\n            if (selection.element) {\n                return `${selection.text}`;\n            }\n            return selection.text;\n        }\n\n        function formatResult(result) {\n            if (result.loading) return result.text;\n            return result.text;\n        }\n\n        \n        $select.on('click', '.remove-item', function (e) {\n            e.preventDefault();\n            const $option = $(this).closest('.select2-selection__choice');\n            const value = $option.attr('title');\n            $option.remove();\n            $select.find(`option[value='${value}']`).prop('selected', false);\n            $select.trigger('change');\n        });\n\n        \n        $select.on('select2:selecting', function (e) {\n            const inputText = e.params.args.data.text;\n            const matchingUser = window.users.find(user => user.username === inputText);\n            if (!matchingUser) {\n                e.preventDefault();\n                $select.find('option[data-select2-tag]').remove(); \n            }\n        });\n    }\n\n\n\n    clearinput() {\n        this.$text.val('');\n\n    }\n    handlesuccess(tweet) {\n\n        this.getUpdatedTweetList(tweet);\n        this.clearinput();\n        this.$el.find(':input').prop('disabled', false);\n    }\n    getUpdatedTweetList(data) {\n\n        const li = $('<li class=\"tweet\">');\n        const profile = $(`<div class=\"top-part\" ><a class=\"profile\" href=\"users/${data.user.id}\">${data.user.username}</a></div>`);\n        const content = $(`<span class=\"content\">${data.content}</span>`);\n        const mentions = `<ul>${data.mentions.map((mention) =>\n            (`<a class=\"mentions\" href=\"users/${mention.user.id}\"> @${mention.user.username} </a>`))}</ul>`;\n        const new_date = APIUtil.formatDate(data.created_at);\n        const date = $(`<span class=\"date\">${new_date}</span>`);\n        profile.append(mentions);\n        li.append(profile);\n        li.append(content);\n        li.append(date);\n        li.css('opacity', 0).animate({ opacity: 1 }, 500);\n\n        this.$ul.prepend(li)\n\n\n    }\n\n    compose(event) {\n        event.preventDefault();\n\n      \n        const mentionUsers = $('.mention-select').val();\n\n        \n        const data = this.$el.serializeJSON();\n        data.tweet.mentioned_user_ids = mentionUsers;\n\n        if (data.tweet.content.length > 0) {\n            this.$el.find(':input').prop('disabled', true);\n            APIUtil.createTweet(data).then(tweet => this.handlesuccess(tweet));\n        }\n    }\n\n}\n\nexport default TweetCompose","import APIUtil from \"./api_util\";\nimport FollowToggle from \"./follow_toggle\";\nclass UsersSearch {\n    constructor(el) {\n        this.$el = $(el);\n        this.$input = this.$el.find('input[name=username]');\n        this.$ul = this.$el.find('.users');\n\n        this.$input.on('input', this.handleInput.bind(this));\n    }\n\n    handleInput(event) {\n        if (this.$input.val() === '') {\n            this.renderResults([]);\n            return;\n        }\n        APIUtil.searchUsers(this.$input.val().toLowerCase())\n            .then(users => this.renderResults(users));\n    }\n\n    renderResults(users) {\n        this.$ul.empty();\n        \n       \n            \n        for (let i = 0; i < users.length; i++) {\n            const user = users[i];\n            \n            let $a = $('<a></a>');\n            $a.text(`@${user.username}`);\n            $a.attr('href', `/users/${user.id}`);\n\n            const $followToggle = $('<button></button>');\n            new FollowToggle($followToggle, {\n                userId: user.id,\n                followState: user.followed ? 'followed' : 'unfollowed'\n            });\n\n            const $li = $('<li></li>');\n            \n            $li.append($a);\n            $li.append($followToggle);\n            $li.addClass(\"fade-in\")\n\n            this.$ul.append($li);\n\n            setTimeout(() => {\n                $li.css('opacity', '1');\n            }, 25 * i); \n            \n        }\n        \n    }\n\n    \n\n}\n\nexport default UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import FollowToggle from './follow_toggle';\nimport UsersSearch from './users_search';\nimport Headerfix from './header';\nimport SidePull from './side_pull';\nimport TweetCompose from './tweet_compose';\nimport FollowToggle2 from './follow_toggle2';\nimport More from './more';\n\n$(() => {\n\n    $('.follow-toggle').each((index,ele)=>{\n        const thing = new FollowToggle(ele);\n    })\n    $('.users-search').each((index,ele)=>{\n        const thing2 = new UsersSearch(ele);\n    })\n    const thing3 = new Headerfix($(\".header-nav-mobile\"), $(document)); \n    const thing4 = new SidePull($(\".side-pull\"), $(\".header-nav-mobile\"), $('.post-button'), $('.new-form'), $('body'), $(document) );\n    const thing5 = new TweetCompose($(\".tweet-compose\"), $(document) );\n    if ($('.follow-toggle2').length>0){\n    const thing6 = new FollowToggle2($('.follow-toggle2'));\n    };\n    const thing7 = new More($(document));\n})"],"names":[],"sourceRoot":""}